import discord
from discord.ext import commands
import akinator

class AkinatorGame(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.aki = akinator.Akinator()

    @commands.command(name="akinator")
    async def start_akinator(self, ctx):
      """Inicia o jogo do Akinator."""
      await ctx.send("ü§î Pense em um personagem, e eu tentarei adivinhar! Responda com `sim`, `n√£o`, `n√£o sei`, `provavelmente` ou `provavelmente n√£o`. Para encerrar, digite `parar`.")

      try:
          question = self.aki.start_game()
          if not question:
              await ctx.send("‚ùå N√£o consegui iniciar o jogo. Tente novamente mais tarde.")
              return

          while self.aki.progression <= 80:
              await ctx.send(f"‚ùì {question} (Progresso: {self.aki.progression}%)")
              response = await self.bot.wait_for(
                  "message",
                  check=lambda m: m.author == ctx.author and m.channel == ctx.channel,
              )
              answer = response.content.lower()

              if answer in ["sim", "s"]:
                  question = self.aki.answer("yes")
              elif answer in ["n√£o", "n"]:
                  question = self.aki.answer("no")
              elif answer in ["n√£o sei", "nao sei"]:
                  question = self.aki.answer("idk")
              elif answer in ["provavelmente", "prov"]:
                  question = self.aki.answer("probably")
              elif answer in ["provavelmente n√£o", "prov nao"]:
                  question = self.aki.answer("probably not")
              elif answer == "parar":
                  await ctx.send("üõë Jogo encerrado!")
                  return
              else:
                  await ctx.send("‚ùå Resposta inv√°lida. Use: `sim`, `n√£o`, `n√£o sei`, `provavelmente` ou `provavelmente n√£o`.")
                  continue

          # Akinator faz uma suposi√ß√£o
          self.aki.win()
          await ctx.send(f"üéâ Eu acho que √©: **{self.aki.first_guess['name']}** ({self.aki.first_guess['description']})!\n\n{self.aki.first_guess['absolute_picture_path']}")
          await ctx.send("Eu acertei? Responda com `sim` ou `n√£o`.")
          response = await self.bot.wait_for(
              "message",
              check=lambda m: m.author == ctx.author and m.channel == ctx.channel,
          )
          if response.content.lower() in ["sim", "s"]:
              await ctx.send("üéâ Eu sabia!")
          else:
              await ctx.send("üò¢ Que pena! Vou tentar melhorar na pr√≥xima vez.")
      except akinator.AkiNoQuestions:
          await ctx.send("‚ùå N√£o consegui encontrar mais perguntas. Jogo encerrado.")
      except Exception as e:
          await ctx.send(f"‚ùå Ocorreu um erro: {e}")
async def setup(bot):
    await bot.add_cog(AkinatorGame(bot))